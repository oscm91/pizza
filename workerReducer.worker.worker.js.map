{"version":3,"file":"workerReducer.worker.worker.js","mappings":"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C6B;AANxB;AAQD;;AAED,SAAK/B,iEAAL;AAAsB;AACpB,iCACKQ,OADL;AAGD;;AAED;AAAS;AACP,eAAOF,KAAP;AACD;AAhIH;AAkID,CAnID;;;;;;;;;;;;;;;;;AC/IqE;;AAErE;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,MAAqC,GAAG,CAAyB;AACrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;;AAEA;AACA,oBAAoB,MAAqC,GAAG,CAAyB;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe,UAAU;AACzB;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,MAAqC,GAAG,CAAyB;AACzF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe;AACf;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAA0B;AACxF;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAqC,GAAG,CAA0B;AAC5F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,IAAI;AACJ;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,MAAqC,GAAG,CAA0B;AACxF;;AAEA;AACA;AACA,KAAK;AACL,sBAAsB,MAAqC,GAAG,CAA0B;AACxF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;;;AAGA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;;AAEA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qDAAqD;AACrD;;AAEA;;AAEA,MAAM,IAAqC;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,IAAqC;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,MAAqC,GAAG,CAA0B;AAC1F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,MAAqC,GAAG,CAA0B;AACtF;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,UAAU;AACvB;;AAEA;AACA,6EAA6E,aAAa;AAC1F;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,MAAqC,GAAG,CAA0B;AAC1F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,aAAa,oFAAa,CAAC,oFAAa,GAAG,YAAY;AACvD;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqC;AACzC;AACA;;AAEgI;;;;;;;;;;;;AC3qBjH;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;;;;;;;;;;;;ACbiD;;AAEjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEe;AACf,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA,QAAQ,8DAAc;AACtB,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB,kBAAkB,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA,yDAAyD,gBAAgB,IAAI;AAC7E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC,IAAI;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsH;AACtH;;;;;;;UC5SA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNiC;AACO;AACS;AACA;;AAEjD,qBAAqB,sDAAe;AACpC,YAAY,yDAAe;AAC3B,YAAY,yDAAe;AAC3B,CAAC;;AAED,+CAAM","sources":["webpack:///../../libs/store/src/lib/actions/actionTypes.ts","webpack:///../../libs/store/src/lib/reducers/payments/reducer.ts","webpack:///../../libs/store/src/lib/reducers/products/reducer.ts","webpack:///../../node_modules/redux/es/redux.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../../node_modules/comlink/dist/esm/comlink.mjs","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../../libs/store/src/lib/reducers/workerReducer.worker.ts"],"sourcesContent":["// payments Actions\nexport const PAYMENTS_TABLE_FORMAT = '@@PAYMENTS/TABLE/FORMAT';\nexport const PAYMENTS_TABLE_FILTER = '@@PAYMENTS/TABLE/FILTER';\nexport const PAYMENTS_TABLE_UPDATE = '@@PAYMENTS/TABLE/UPDATE';\n\n// product Actions\nexport const PRODUCTS_ADD_INGREDIENT = '@@PRODUCTS/ADD/INGREDIENT';\nexport const PRODUCTS_REMOVE_INGREDIENT = '@@PRODUCTS/REMOVE/INGREDIENT';\nexport const PRODUCTS_ADD_MASS = '@@PRODUCTS/ADD/MASS';\nexport const PRODUCTS_REMOVE_MASS = '@@PRODUCTS/REMOVE/MASS';\nexport const PRODUCTS_SET_NAME = '@@PRODUCTS/SET/NAME';\nexport const PRODUCTS_UPDATE = '@@PRODUCTS/UPDATE';\nexport const PRODUCTS_SAVE = '@@PRODUCTS/SAVE';\n","import {\n  PAYMENTS_TABLE_FORMAT,\n  PAYMENTS_TABLE_FILTER,\n  PAYMENTS_TABLE_UPDATE,\n} from '../../actions/actionTypes';\n\nconst initialState = {\n  data: [],\n  normalized: [],\n  filtered: [],\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case PAYMENTS_TABLE_FORMAT: {\n      const normalized = Object.values(payload.payments).map(\n        (payments: any) => {\n          return {\n            ...payments,\n            date: payments.created_date,\n            amount: `$${payments.payment_value}`,\n            deductions: `-$${payments.payment_due}`,\n          };\n        }\n      );\n\n      return {\n        ...state,\n        data: payload.payments,\n        normalized,\n      };\n    }\n    case PAYMENTS_TABLE_FILTER: {\n      if (!payload.filters.length || payload.filters.includes('all')) {\n        return {\n          ...state,\n          filtered: payload.payments,\n        };\n      }\n\n      return {\n        ...state,\n        filtered: payload.payments.filter((payments) =>\n          payload.filters.includes(payments.payment_type)\n        ),\n      };\n    }\n    case PAYMENTS_TABLE_UPDATE: {\n      return {\n        ...state,\n        ...payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const suma = (a, b) => a + b;","import {\n  PRODUCTS_SET_NAME,\n  PRODUCTS_ADD_MASS,\n  PRODUCTS_UPDATE,\n  PRODUCTS_ADD_INGREDIENT,\n  PRODUCTS_REMOVE_INGREDIENT,\n  PRODUCTS_REMOVE_MASS,\n  PRODUCTS_SAVE,\n} from '../../actions/actionTypes';\n\nexport const initialState = {\n  ingredients: [\n    {\n      name: 'Pollo',\n      price: 5000,\n    },\n    {\n      name: 'Peperoni',\n      price: 4500,\n    },\n    {\n      name: 'Maiz',\n      price: 3000,\n    },\n    {\n      name: 'Tomate',\n      price: 3000,\n    },\n    {\n      name: 'Ají',\n      price: 3000,\n    },\n    {\n      name: 'Maduro',\n      price: 3000,\n    },\n    {\n      name: 'Champiñones',\n      price: 3000,\n    },\n    {\n      name: 'Carne de res',\n      price: 3000,\n    },\n    {\n      name: 'Aguacate',\n      price: 3000,\n    },\n    {\n      name: 'Cebolla',\n      price: 3000,\n    },\n    {\n      name: 'Jamón',\n      price: 3000,\n    },\n    {\n      name: 'Queso',\n      price: 3000,\n    },\n    {\n      name: 'Anchoas',\n      price: 3000,\n    },\n    {\n      name: 'Salmón',\n      price: 3000,\n    },\n    {\n      name: 'Espárragos',\n      price: 3000,\n    },\n    {\n      name: 'habichuela',\n      price: 3000,\n    },\n  ],\n  mass: [\n    {\n      name: 'Base de harina',\n      price: 10000,\n    },\n    {\n      name: 'Base de avena',\n      price: 15000,\n    },\n  ],\n  product: {\n    name: '',\n    ingredients: [],\n    mass: undefined,\n    price: 0,\n    resume: [],\n    isCompleted: false,\n  },\n  list: [],\n};\n\nconst getPrice = (mass, ingredients) => {\n  const massPrice = (mass && mass.price) || 0;\n  const ingredientsPrice =\n    ingredients && ingredients.length\n      ? ingredients.reduce((total, ingredient) => {\n          return total + (ingredient.price || 0);\n        }, 0)\n      : 0;\n\n  return massPrice + ingredientsPrice;\n};\n\nconst getResume = (mass, ingredients) => {\n  const resume = [];\n  if (mass) {\n    resume.push({\n      ...mass,\n      type: 'mass',\n      quantity: 1,\n    });\n  }\n\n  if (ingredients && ingredients.length) {\n    const resumeIngredients = ingredients.reduce((resume, ingredient) => {\n      const resumeIngredient = resume[ingredient.name] || {};\n      return {\n        ...resume,\n        [ingredient.name]: {\n          ...ingredient,\n          price: (resumeIngredient.price || 0) + ingredient.price,\n          type: 'ingredient',\n          quantity: (resumeIngredient.quantity || 0) + 1,\n        },\n      };\n    }, {});\n    resume.push(...Object.values(resumeIngredients));\n  }\n\n  return resume;\n};\n\nconst isComplete = (name, mass, ingredients) => {\n  return !!(name && mass && ingredients && ingredients.length);\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case PRODUCTS_SET_NAME: {\n      return {\n        ...state,\n        product: {\n          ...state.product,\n          name: payload,\n          isCompleted: isComplete(\n            payload,\n            state.product.mass,\n            state.product.ingredients\n          ),\n        },\n      };\n    }\n    case PRODUCTS_ADD_MASS: {\n      const nameBase = payload;\n      const mass = state.mass.find((mass) => mass.name === nameBase);\n\n      return {\n        ...state,\n        product: {\n          ...state.product,\n          mass: mass,\n          price: getPrice(mass, state.product.ingredients),\n          resume: getResume(mass, state.product.ingredients),\n          isCompleted: isComplete(\n            state.product.name,\n            mass,\n            state.product.ingredients\n          ),\n        },\n      };\n    }\n\n    case PRODUCTS_REMOVE_MASS: {\n      const mass = undefined;\n\n      return {\n        ...state,\n        product: {\n          ...state.product,\n          mass: mass,\n          price: getPrice(mass, state.product.ingredients),\n          resume: getResume(mass, state.product.ingredients),\n          isCompleted: isComplete(\n            state.product.name,\n            mass,\n            state.product.ingredients\n          ),\n        },\n      };\n    }\n\n    case PRODUCTS_ADD_INGREDIENT: {\n      const nameBase = payload;\n      const ingredient = state.ingredients.find(\n        (ingredient) => ingredient.name === nameBase\n      );\n      const ingredients = [].concat(state.product.ingredients, ingredient);\n\n      return {\n        ...state,\n        product: {\n          ...state.product,\n          ingredients: ingredients,\n          price: getPrice(state.product.mass, ingredients),\n          resume: getResume(state.product.mass, ingredients),\n          isCompleted: isComplete(\n            state.product.name,\n            state.product.mass,\n            ingredients\n          ),\n        },\n      };\n    }\n\n    case PRODUCTS_REMOVE_INGREDIENT: {\n      const nameBase = payload;\n      const ingredient = state.ingredients.find(\n        (ingredient) => ingredient.name === nameBase\n      );\n\n      let isRemoved = false;\n\n      const ingredients = state.product.ingredients.filter((item) => {\n        if (item.name === ingredient.name && !isRemoved) {\n          isRemoved = true;\n          return false;\n        }\n        return true;\n      });\n\n      return {\n        ...state,\n        product: {\n          ...state.product,\n          ingredients: ingredients,\n          price: getPrice(state.product.mass, ingredients),\n          resume: getResume(state.product.mass, ingredients),\n          isCompleted: isComplete(\n            state.product.name,\n            state.product.mass,\n            ingredients\n          ),\n        },\n      };\n    }\n\n    case PRODUCTS_SAVE: {\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          [state.product.name]: state.product,\n        },\n        product: initialState.product,\n      };\n    }\n\n    case PRODUCTS_UPDATE: {\n      return {\n        ...payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\n    function miniKindOf(val) {\n      if (val === void 0) return 'undefined';\n      if (val === null) return 'null';\n      var type = typeof val;\n\n      switch (type) {\n        case 'boolean':\n        case 'string':\n        case 'number':\n        case 'symbol':\n        case 'function':\n          {\n            return type;\n          }\n      }\n\n      if (Array.isArray(val)) return 'array';\n      if (isDate(val)) return 'date';\n      if (isError(val)) return 'error';\n      var constructorName = ctorName(val);\n\n      switch (constructorName) {\n        case 'Symbol':\n        case 'Promise':\n        case 'WeakMap':\n        case 'WeakSet':\n        case 'Map':\n        case 'Set':\n          return constructorName;\n      } // other\n\n\n      return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n    }\n\n    function ctorName(val) {\n      return typeof val.constructor === 'function' ? val.constructor.name : null;\n    }\n\n    function isError(val) {\n      return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n    }\n\n    function isDate(val) {\n      if (val instanceof Date) return true;\n      return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n    }\n\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { expose } from 'comlink';\nimport { combineReducers } from 'redux';\nimport paymentsReducer from './payments/reducer';\nimport productsReducer from './products/reducer';\n\nconst asyncReducer = combineReducers({\n  payments: paymentsReducer,\n  products: productsReducer,\n});\n\nexpose(asyncReducer);\n"],"names":["PAYMENTS_TABLE_FORMAT","PAYMENTS_TABLE_FILTER","PAYMENTS_TABLE_UPDATE","PRODUCTS_ADD_INGREDIENT","PRODUCTS_REMOVE_INGREDIENT","PRODUCTS_ADD_MASS","PRODUCTS_REMOVE_MASS","PRODUCTS_SET_NAME","PRODUCTS_UPDATE","PRODUCTS_SAVE","initialState","data","normalized","filtered","state","type","payload","Object","values","payments","map","date","created_date","amount","payment_value","deductions","payment_due","filters","length","includes","filter","payment_type","suma","a","b","ingredients","name","price","mass","product","undefined","resume","isCompleted","list","getPrice","massPrice","ingredientsPrice","reduce","total","ingredient","getResume","push","quantity","resumeIngredients","resumeIngredient","isComplete","nameBase","find","concat","isRemoved","item"],"sourceRoot":""}